CREATE TABLE SEMESTER_TABLE

(

SEMESTER_ID NUMBER(10),

SEMESTER_TYPE VARCHAR2(100),

SEM_START_DATE TIMESTAMP NOT NULL,

SEM_END_DATE TIMESTAMP NOT NULL,

CONSTRAINT SEM_PK PRIMARY KEY(SEMESTER_ID)

);

CREATE TABLE COURSE_TABLE

(

COURSE_ID NUMBER(10),

COURSE_NUMBER VARCHAR2(100),

COURSE_NAME VARCHAR2(100),

COURSE_DESCRIPTION VARCHAR2(4000),

CONSTRAINT COURSE_PK PRIMARY KEY(COURSE_ID),

);



CREATE TABLE COURSE_SEMESTER_TABLE

(

COURSE_SEM_ID NUMBER(10),

COURSE_ID NUMBER(10),

SEMESTER_ID NUMBER(10),

CONSTRAINT COURSE_SEM_PK PRIMARY KEY(COURSE_SEM_ID),

CONSTRAINT FK1 FOREIGN KEY(SEMESTER_ID) REFERENCES SEMESTER_TABLE(SEMESTER_ID),

CONSTRAINT FK2 FOREIGN KEY(COURSE_ID) REFERENCES COURSE_TABLE(COURSE_ID)

);



CREATE TABLE USER_TABLE

(

USER_ID NUMBER(10),

USER_TYPE VARCHAR2(100),

NAME VARCHAR2(100),

USER_NAME VARCHAR2(100) UNIQUE ,

USER_PASSWORD VARCHAR2(100),

USER_BIODATA VARCHAR2(4000),

CONSTRAINT USER_TABLE_PK PRIMARY KEY(USER_ID)

);

CREATE TABLE ENROLLMENT_TABLE

(

ENROLLMENT_ID NUMBER(10),

USER_ID NUMBER(10),

COURSE_SEMESTER_ID NUMBER(10),

ENROLLMENT_TYPE VARCHAR2(100),

CONSTRAINT ENROLLMENT_TABLE_PK PRIMARY KEY(ENROLLMENT_ID),

CONSTRAINT FK3 FOREIGN KEY(USER_ID) REFERENCES USER_TABLE(USER_ID),

CONSTRAINT FK4 FOREIGN KEY(COURSE_SEMESTER_ID) REFERENCES COURSE_SEMESTER_TABLE(COURSE_SEM_ID)

);

CREATE TABLE ASSIGNMENT_TABLE

(

ASSIGNMENT_ID NUMBER(10),

UPLOADED_BY_ENR_ID NUMBER(10),

ASSIGN_DESCRIPTION VARCHAR2(100),

ASSIGN_DATE_CREATED TIMESTAMP,

ASSIGN_DATE_PUBLISHED TIMESTAMP,

ASSIGN_DATE_EXPIRED TIMESTAMP,

ASSIGN_DATE_DUE TIMESTAMP,

COURSE_SEM_ID NUMBER(10),

ASSIGNMENT_TITLE VARCHAR2(100),

SCORE_MAX NUMBER(10),

CONSTRAINT ASSIGNMENT_TABLE_PK PRIMARY KEY(ASSIGNMENT_ID),

CONSTRAINT FK5 FOREIGN KEY(UPLOADED_BY_ENR_ID) REFERENCES ENROLLMENT_TABLE(ENROLLMENT_ID),

CONSTRAINT FK6 FOREIGN KEY(COURSE_SEM_ID) REFERENCES COURSE_SEMESTER_TABLE(COURSE_SEM_ID)

);

CREATE TABLE QUIZ_TABLE

(

QUIZ_ID NUMBER(10),

UPLOADED_BY_ENR_ID NUMBER(10),

QUIZ_DESCRIPTION VARCHAR2(100),

COURSE_SEM_ID NUMBER(10),

QUIZ_TITLE VARCHAR2(100),

QUIZ_DATE_CREATED TIMESTAMP,

QUIZ_DATE_PUBLISHED TIMESTAMP,

QUIZ_DATE_EXPIRED TIMESTAMP,

QUIZ_DUE_DATE TIMESTAMP,

TIME_TAKEN NUMBER(10),

CONSTRAINT QUIZ_TABLE_PK PRIMARY KEY(QUIZ_ID),

CONSTRAINT FK7 FOREIGN KEY(UPLOADED_BY_ENR_ID) REFERENCES ENROLLMENT_TABLE(ENROLLMENT_ID),

CONSTRAINT FK8 FOREIGN KEY(COURSE_SEM_ID) REFERENCES COURSE_SEMESTER_TABLE(COURSE_SEM_ID)

);

CREATE TABLE QUESTION_TABLE

(

QUESTION_ID NUMBER(10),

QUIZ_ID NUMBER(10),

QUESTION_NUMBER NUMBER(10),

QUEST_DESCRIPTION VARCHAR2(100),

CORRECT_ANSWERS VARCHAR2(100),

OPTIONA VARCHAR2(1000),

OPTIONB VARCHAR2(1000),

OPTIONC VARCHAR2(1000),

OPTIOND VARCHAR2(1000),

MAX_SCORE NUMBER(10),

CONSTRAINT QUESTION_TABLE_PK PRIMARY KEY(QUESTION_ID),

CONSTRAINT FK9 FOREIGN KEY(QUIZ_ID) REFERENCES QUIZ_TABLE(QUIZ_ID)

);

CREATE TABLE FILE_TABLE

(

FILE_ID NUMBER(10),

COURSE_ID NUMBER(10),

FILE_DATE_CREATED TIMESTAMP,

FILE_DATE_PUBLISHED TIMESTAMP,

FILE_DATE_EXPIRED TIMESTAMP,

FILE_CONTENT BLOB,

UPLOADED_BY_ID NUMBER(10),

CONSTRAINT FILE_TABLE_PK PRIMARY KEY(FILE_ID),

CONSTRAINT FK10 FOREIGN KEY(UPLOADED_BY_ID) REFERENCES USER_TABLE(USER_ID),

CONSTRAINT FK11 FOREIGN KEY(COURSE_ID) REFERENCES COURSE_TABLE(COURSE_ID)

);

CREATE TABLE ANNOUNCEMENT_TABLE

(

ANNOUNCEMENT_ID NUMBER(10),

FROM_USER_ID NUMBER(10),

TO_USER_ID NUMBER(10),

MESSAGE_TITLE VARCHAR2(100),

MESSAGE_BODY VARCHAR2(4000),

DATE_SENT TIMESTAMP,

MESSAGE_TYPE VARCHAR2(20),

CONSTRAINT ANNOUNCEMENT_TABLE_PK PRIMARY KEY(ANNOUNCEMENT_ID),

CONSTRAINT FK12 FOREIGN KEY(FROM_USER_ID) REFERENCES USER_TABLE(USER_ID)

);

CREATE TABLE SUBMISSION_TABLE

(

SUBMISSION_ID NUMBER(10),

ASSIGN_ID NUMBER(10),

QUIZ_ID NUMBER(10),

SCORE_RECEIVED NUMBER(10),

SUBMISSION_DATE TIMESTAMP,

ASSIGN_UPLOADED BLOB,

UPLOADED_BY_ENR_ID NUMBER(10),

CONSTRAINT SUBMISSION_TABLE_PK PRIMARY KEY(SUBMISSION_ID),

CONSTRAINT FK14 FOREIGN KEY(ASSIGN_ID) REFERENCES ASSIGNMENT_TABLE(ASSIGNMENT_ID),

CONSTRAINT FK15 FOREIGN KEY(QUIZ_ID) REFERENCES QUIZ_TABLE(QUIZ_ID),

CONSTRAINT FK16 FOREIGN KEY(UPLOADED_BY_ENR_ID) REFERENCES ENROLLMENT_TABLE(ENROLLMENT_ID)

);





--Sequence commands
CREATE SEQUENCE SEQ_SEMESTER_TABLE START WITH 1;
CREATE SEQUENCE SEQ_COURSE_TABLE START WITH 1;
CREATE SEQUENCE SEQ_COURSE_SEMESTER_TABLE START WITH 1;
CREATE SEQUENCE SEQ_USER_TABLE START WITH 2;
CREATE SEQUENCE SEQ_ENROLLMENT_TABLE START WITH 1;
CREATE SEQUENCE SEQ_ASSIGNMENT_TABLE START WITH 1;
CREATE SEQUENCE SEQ_QUIZ_TABLE START WITH 1;
CREATE SEQUENCE SEQ_QUESTION_TABLE START WITH 1;
CREATE SEQUENCE SEQ_FILE_TABLE START WITH 1;
CREATE SEQUENCE SEQ_ANNOUNCEMENT_TABLE START WITH 1;
CREATE SEQUENCE SEQ_SUBMISSION_TABLE START WITH 1;


--Drop commands

DROP TABLE SEMESTER_TABLE
DROP TABLE COURSE_TABLE
DROP TABLE COURSE_SEMESTER_TABLE
DROP TABLE USER_TABLE
DROP TABLE ENROLLMENT_TABLE
DROP TABLE ASSIGNMENT_TABLE
DROP TABLE QUIZ_TABLE
DROP TABLE QUESTION_TABLE
DROP TABLE FILE_TABLE
DROP TABLE ANNOUNCEMENT_TABLE
DROP TABLE SUBMISSION_TABLE



-- Unique constraints

ALTER TABLE COURSE_TABLE
ADD CONSTRAINT "COURSE_SHOULD_BE_UNIQUE" UNIQUE ("COURSE_NUMBER", "COURSE_NAME")


ALTER TABLE COURSE_SEMESTER_TABLE
ADD CONSTRAINT "COURSE_SEM_SHOULD_BE_UNIQUE" UNIQUE ("COURSE_ID", "SEMESTER_ID");


ALTER TABLE ENROLLMENT_TABLE
ADD CONSTRAINT "ENROLLMENT_SHOULD_BE_UNIQUE" UNIQUE ("USER_ID","COURSE_SEMESTER_ID", "ENROLLMENT_TYPE");
